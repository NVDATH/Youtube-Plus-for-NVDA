name: Release NVDA Add-on

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: "x86"

      - name: Install dependencies
        run: |
          pip install scons
          pip install markdown

      - name: Build NVDA add-on package
        run: scons -c && scons

      - name: Find add-on package
        id: find_addon_package
        run: |
          $addon_file = Get-ChildItem -Path . -Filter "*.nvda-addon" -Recurse | Select-Object -First 1
          if ($addon_file) {
            Write-Host "::set-output name=file_name::$($addon_file.Name)"
            Write-Host "::set-output name=file_path::$($addon_file.FullName)"
          } else {
            Write-Host "::set-output name=file_name::"
            Write-Host "::set-output name=file_path::"
          }
        shell: pwsh
      
      - name: Get tag name
        id: get_tag
        run: |
          $ref = "${{ github.ref }}"
          $tag_name = $ref.Substring($ref.LastIndexOf('/') + 1)
          Write-Host "::set-output name=tag::$tag_name"
        shell: pwsh

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.pat_for_release }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Release ${{ steps.get_tag.outputs.tag }}
          body: |
            Automatically generated release for version ${{ steps.get_tag.outputs.tag }}.
          draft: false
          prerelease: false

      - name: Upload add-on package as release asset
        if: steps.find_addon_package.outputs.file_name != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.pat_for_release }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_addon_package.outputs.file_path }}
          asset_name: ${{ steps.find_addon_package.outputs.file_name }}
          asset_content_type: application/octet-stream